{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/summarize-gratitude.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview Provides weekly and monthly summaries of gratitude entries,\n * using sentiment analysis to highlight recurring themes and positive trends.\n *\n * - summarizeGratitude - A function to generate gratitude summaries.\n * - SummarizeGratitudeInput - The input type for summarizeGratitude function.\n * - SummarizeGratitudeOutput - The return type for summarizeGratitude function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst SummarizeGratitudeInputSchema = z.object({\n  entries: z.array(\n    z.object({\n      date: z.string().describe('Date of the gratitude entry.'),\n      text: z.string().describe('Text content of the gratitude entry.'),\n    })\n  ).describe('Array of gratitude entries to summarize.'),\n  period: z.enum(['weekly', 'monthly']).describe('The period for the summary (weekly or monthly).'),\n});\nexport type SummarizeGratitudeInput = z.infer<typeof SummarizeGratitudeInputSchema>;\n\nconst SummarizeGratitudeOutputSchema = z.object({\n  summary: z.string().describe('A summary of gratitude entries, highlighting recurring themes and positive trends.'),\n});\nexport type SummarizeGratitudeOutput = z.infer<typeof SummarizeGratitudeOutputSchema>;\n\nexport async function summarizeGratitude(input: SummarizeGratitudeInput): Promise<SummarizeGratitudeOutput> {\n  return summarizeGratitudeFlow(input);\n}\n\nconst summarizeGratitudePrompt = ai.definePrompt({\n  name: 'summarizeGratitudePrompt',\n  input: {schema: SummarizeGratitudeInputSchema},\n  output: {schema: SummarizeGratitudeOutputSchema},\n  prompt: `Lo itu asisten jurnal rasa syukur yang santai. Tugas lo ngerangkum catatan rasa syukur user selama periode ({{period}}), tunjukin tema yang sering muncul sama tren positifnya. Pake analisis sentimen buat nentuin mood secara umum dan topik utama di catetannya. Rangkumannya harus ngasih tau apa aja yang paling disyukuri sama user dan gimana perasaan syukurnya berkembang.\\n\\nCatatan Rasa Syukur:\\n{{#each entries}}\\nTanggal: {{date}}\\nCatetan: {{text}}\\n{{/each}}`,\n});\n\nconst summarizeGratitudeFlow = ai.defineFlow(\n  {\n    name: 'summarizeGratitudeFlow',\n    inputSchema: SummarizeGratitudeInputSchema,\n    outputSchema: SummarizeGratitudeOutputSchema,\n  },\n  async input => {\n    const {output} = await summarizeGratitudePrompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;;CAOC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,gCAAgC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC7C,SAAS,uIAAA,CAAA,IAAC,CAAC,KAAK,CACd,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACP,MAAM,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;QAC1B,MAAM,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC5B,IACA,QAAQ,CAAC;IACX,QAAQ,uIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAU;KAAU,EAAE,QAAQ,CAAC;AACjD;AAGA,MAAM,iCAAiC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC9C,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC/B;AAGO,eAAe,mBAAmB,KAA8B;IACrE,OAAO,uBAAuB;AAChC;AAEA,MAAM,2BAA2B,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC/C,MAAM;IACN,OAAO;QAAC,QAAQ;IAA6B;IAC7C,QAAQ;QAAC,QAAQ;IAA8B;IAC/C,QAAQ,CAAC,+cAA+c,CAAC;AAC3d;AAEA,MAAM,yBAAyB,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC1C;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,yBAAyB;IAChD,OAAO;AACT;;;IApBoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 293, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["'use server';\n\nimport { summarizeGratitude, type SummarizeGratitudeInput } from '@/ai/flows/summarize-gratitude';\n\nexport async function generateSummaryAction(input: SummarizeGratitudeInput) {\n  try {\n    const output = await summarizeGratitude(input);\n    if (!output.summary) {\n        return { summary: null, error: 'Failed to generate summary. Please try again.' };\n    }\n    return { summary: output.summary, error: null };\n  } catch (e: any) {\n    console.error('Error generating summary:', e);\n    return { summary: null, error: e.message || 'An unexpected error occurred while generating the summary.' };\n  }\n}\n"],"names":[],"mappings":";;;;;AAEA;;;;;AAEO,eAAe,sBAAsB,KAA8B;IACxE,IAAI;QACF,MAAM,SAAS,MAAM,CAAA,GAAA,4IAAA,CAAA,qBAAkB,AAAD,EAAE;QACxC,IAAI,CAAC,OAAO,OAAO,EAAE;YACjB,OAAO;gBAAE,SAAS;gBAAM,OAAO;YAAgD;QACnF;QACA,OAAO;YAAE,SAAS,OAAO,OAAO;YAAE,OAAO;QAAK;IAChD,EAAE,OAAO,GAAQ;QACf,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO;YAAE,SAAS;YAAM,OAAO,EAAE,OAAO,IAAI;QAA6D;IAC3G;AACF;;;IAXsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 335, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {generateSummaryAction as '4047f3ef62c991ed144b9ef0e82dc8ec2b43437dc9'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoR,GACjT,kDACA","debugId":null}},
    {"offset": {"line": 401, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,8BACA","debugId":null}},
    {"offset": {"line": 415, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}